name: CI

on:
  push:
    branches:
      - 'master*'
  pull_request:
  # Run daily at 0:01 UTC
  schedule:
    - cron: '1 0 * * *'

jobs:

  test:
    name: "üêç ${{ matrix.python-version }} ‚Ä¢ ${{ matrix.runs-on }}"
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        runs-on: [ ubuntu-latest ]
        python-version: [ "3.8", "3.10", "3.11", "3.12", "3.13"]
        include:  # testing the last "reasonable supported" version
          - runs-on: macOS-13
            python-version: "3.9"
          - runs-on: macOS-14
            python-version: "3.8"  # min version available for Apple silicon
          - runs-on: windows-latest
            python-version: "3.9"

    steps:
      - uses: actions/checkout@v4

      - name: Setup uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
          python-version: ${{ matrix.python-version }}
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"

      - name: Requirements check
        run: uv pip list

      - name: Install core fonts
        if: runner.os == 'Linux'
        run: |
          echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | sudo debconf-set-selections
          sudo apt-get install ttf-mscorefonts-installer

      - name: Install package
        run: |
          uv pip install -e ".[all]"
          uv pip install pytest-github-actions-annotate-failures
          uv pip install pytest-xdist
          uv pip list

      - name: Test with pytest
        run: |
          python -m pytest -r sa --mpl --mpl-results-path=pytest_results -n 4

      - name: Upload pytest test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: pytest_results-${{ matrix.python-version }}-${{ matrix.runs-on }}
          retention-days: 3
          path: pytest_results
