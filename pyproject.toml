[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "mplhep"
dynamic = ["version"]
description = "Matplotlib styles for HEP"
readme = "README.md"
license = "MIT"
requires-python = ">=3.8"
authors = [
    { name = "andrzejnovak", email = "novak5andrzej@gmail.com" },
]
classifiers = [
    "Framework :: Matplotlib",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Physics",
]
dependencies = [
    "matplotlib>=3.4",
    "mplhep-data>=0.0.4",
    "numpy>=1.16.0",
    "packaging",
    "uhi>=0.2.0",
]

[project.optional-dependencies]
dev = [
    "bumpversion",
    "jupyter",
    "pre-commit",
    "twine",
]
test = [
    "boost_histogram",
    "hist",
    "pytest-mock",
    "pytest-mpl",
    "pytest-xdist",
    "pytest>=6.0",
    "scikit-hep-testdata",
    "scipy>=1.1.0",
    "uproot",
    "uproot4",
]
all = [
    "mplhep[dev,test]",
]

[project.urls]
Homepage = "https://github.com/scikit-hep/mplhep"


[tool.hatch]
version.source = "vcs"
build.hooks.vcs.version-file = "src/mplhep/_version.py"


[tool.uv]
environments = [
  "python_version >= '3.10'",
]
dev-dependencies = [
  "mplhep[test]",
]


[tool.mypy]
files = ["src"]
python_version = 3.8
warn_unused_configs = true

allow_redefinition = true
# disallow_any_generics = true
# disallow_subclassing_any = true
# disallow_untyped_calls = true
# disallow_untyped_defs = true
# disallow_incomplete_defs = true
check_untyped_defs = false
# disallow_untyped_decorators = true
# no_implicit_optional = true
# warn_redundant_casts = true
# warn_unused_ignores = true
# warn_return_any = true
# no_implicit_reexport = true
# strict_equality = true

[[tool.mypy.overrides]]
module = ["matplotlib.*", "cycler", "scipy.*", "mpl_toolkits.*", "mplhep_data"]
ignore_missing_imports = true


# Additional configuration is in matplotlib/testing/conftest.py.
[tool.pytest.ini_config]
minversion = 6.0
testpaths = ["tests"]
python_files = "test*.py"


[tool.ruff.lint]
extend-select = [
  "B",        # flake8-bugbear
  "I",        # isort
  "ARG",      # flake8-unused-arguments
  "C4",       # flake8-comprehensions
  "EM",       # flake8-errmsg
  "ICN",      # flake8-import-conventions
  "G",        # flake8-logging-format
  "PGH",      # pygrep-hooks
  "PIE",      # flake8-pie
  "PL",       # pylint
  "PT",       # flake8-pytest-style
  "RET",      # flake8-return
  "RUF",      # Ruff-specific
  "SIM",      # flake8-simplify
  "T20",      # flake8-print
  "UP",       # pyupgrade
  "YTT",      # flake8-2020
  "EXE",      # flake8-executable
  "NPY",      # NumPy specific rules
  "PD",       # pandas-vet
  "FURB",     # refurb
  "PYI",      # flake8-pyi
]
ignore = [
  "PLR09",    # Too many <...>
  "PLR2004",  # Magic value used in comparison
  "ISC001",   # Conflicts with formatter
  "NPY002",   # np.random.Generator
  "G004",     # Logging with f-string
  "PD011",    # .values vs .to_numpy can get confused
  "PT013",    # Import from pytest
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]
"docs/conf.py" = ["T20"]
